
from insightface.app import FaceAnalysis
from scipy.spatial.distance import cosine
import cv2

# 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º FaceAnalysis
app = FaceAnalysis(name='buffalo_l', providers=['CPUExecutionProvider'])  # or 'CUDAExecutionProvider' for GPU
app.prepare(ctx_id=0)

# 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
img1 = cv2.imread(r"D:\AI\ArcFace\Cropped_100\1138_ashley_barnes_Front_Default_face2.png")
img2 = cv2.imread(r"D:\AI\ArcFace\Cropped_100\1138_ashley_barnes_Front_Default_face1.png")

face1 = app.get(img1)[0]  # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ –ª–∏—Ü–æ
face2 = app.get(img2)[0]

# 3. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏
emb1 = face1.embedding
emb2 = face2.embedding

# 4. –†–∞—Å—á–µ—Ç –∫–æ—Å–∏–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
distance = cosine(emb1, emb2)

print(f"Cosine distance: {distance:.4f}")
if distance < 0.4:
    print("üë¨ –ü–æ—Ö–æ–∂–∏ (–≤–µ—Ä–æ—è—Ç–Ω–æ –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫)")
else:
    print("‚ùå –ù–µ –ø–æ—Ö–æ–∂–∏ (—Ä–∞–∑–Ω—ã–µ)")
